#include <bits/stdc++.h>

using namespace std;

void input(vector < int > & nums, int n) {
  for (int index = 0; index < n; index++) {
    int element;
    cin >> element;
    nums[index] = element;
  }
}

void print(vector < int > & nums, int n) {
  for (int index = 0; index < n; index++) cout << nums[index] << " ";
  cout << endl;
}

// Time Complexity is O(N^2) and Space Complexity is O(1);
void bubbleSort(vector < int > & nums, int n) {
  for (int i = 0; i < (n - 1); i++) {
    for (int j = 0; j < (n - i - 1); j++) {
      if (nums[j] > nums[j + 1]) swap(nums[j], nums[j + 1]);
    }
  }
}

// Do not uncomment the below commented code unnecessarily.
/*
// Bubble Sort using Recursion.
void bubbleSort(vector < int > & nums, int n) {
  if (n == 1) return;
  for (int idx = 0; idx < (n - 1); idx++) {
    if (nums[idx] > nums[idx + 1]) swap(nums[idx], nums[idx + 1]);
  }
  bubbleSort(nums, n - 1);
}
*/

int main() {
  int size;
  cin >> size;
  vector < int > nums(size, 0);
  input(nums, size);
  print(nums, size);
  bubbleSort(nums, size);
  print(nums, size);
  return 0;
}