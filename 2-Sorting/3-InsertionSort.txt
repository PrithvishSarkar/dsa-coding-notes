#include <bits/stdc++.h>

using namespace std;

void input(vector < int > & nums, int n) {
  for (int index = 0; index < n; index++) {
    int element;
    cin >> element;
    nums[index] = element;
  }
}

void print(vector < int > & nums, int n) {
  for (int index = 0; index < n; index++) cout << nums[index] << " ";
  cout << endl;
}

void shiftAndPlace(vector < int > & nums, int i, int j) {
  int temp = nums[i];
  for (int k = (i - 1); k > j; k--) {
    nums[k + 1] = nums[k];
  }
  nums[j + 1] = temp;
}

// Time Comlexity is O(N^2) and Space Complexity is O(1).
void insertionSort(vector < int > & nums, int n) {
  for (int i = 1; i < n; i++) {
    int j = (i - 1);
    while (j >= 0) {
      if (nums[j] > nums[i]) j--;
      else break;
    }
    shiftAndPlace(nums, i, j);
  }
}

int main() {
  int size;
  cin >> size;
  vector < int > nums(size, 0);
  input(nums, size);
  print(nums, size);
  insertionSort(nums, size);
  print(nums, size);
  return 0;
}