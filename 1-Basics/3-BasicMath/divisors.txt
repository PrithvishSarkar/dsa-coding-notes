// Time Complexity is O(sqrt(N)) and Space Complexity is O(K) where K = Vector Length.

#include <bits/stdc++.h>

using namespace std;

vector < int > getDivisors(int n) {
  vector < int > divisors;
  int sqrtN = sqrt(n);
  for (int d = 1; d <= sqrtN; d++) {
    if (n % d == 0) {
      divisors.push_back(d);
      if ((n / d) != d) divisors.push_back(n / d);
    }
  }
  return divisors;
}

void print(vector < int > & vec) {
  for (auto element: vec) cout << element << " ";
  cout << endl;
}

int main() {
  int num;
  cin >> num;
  vector < int > divisors = getDivisors(num);
  print(divisors);
}